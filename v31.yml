swagger: '2.0'
basePath: "/rest/v3"
host: relap.io
info:
  title: Relap Server2Server API
  termsOfService: https://relap.io/terms
  version: '3'
schemes:
- https
produces:
- application/json

paths:

  /events:
    post:
      operationId: v3_events
      x-mojo-to: rest_api-v3#event
      x-relap-batch: true
      summary: register new events
      produces:
      - application/json
      parameters:
      - $ref: "#/parameters/Authorization"
      - name: json
        in: body
        required: true
        schema:
          $ref: "#/definitions/eventsRequest"
      responses:
        '202':
          description: ''
          examples:
            application/json:
              status: ok
        '500':
          description: "Internal server error"
        '401':
          description: "Authorization failed"
        '400':
          description: "Bad Request"

  /event:
    post:
      operationId: v3_event
      x-mojo-to: rest_api-v3#event
      summary: register new event
      produces:
      - application/json
      parameters:
      - $ref: "#/parameters/uniqueID"
      - $ref: "#/parameters/clientIP"
      - $ref: "#/parameters/clientUserAgent"
      - $ref: "#/parameters/Authorization"
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/event"
      responses:
        '202':
          description: ''
          examples:
            application/json:
              status: ok
        '500':
          description: "Internal server error"
        '401':
          description: "Authorization failed"
        '400':
          description: "Bad Request"

  /recs:
    post:
      operationId: v3_rec_array
      x-mojo-to: rest_api-v3#get_recs
      summary: get recommendations
      description: |
        curl -X POST -H 'Content-type:application/json;' - -d \
            '{
            "limit":"3",
            "illustrationType":"square",
            "deviceInfo":
                {
                "deviceId":"KI9R7MPS740D3911"
                },
            "url": "http://surfingbird.ru/surf/15-tyuremnyh-fraz-kotorye-pozvolyayut-ponyat--se-K575A7",
            "history": ["Dfv02b","aIo94D"]
            }' https://relap.io/rest/v3/recs/?api_key=-mjeOg

      produces:
      - application/json
      parameters:
      - $ref: "#/parameters/uniqueID"
      - $ref: "#/parameters/clientIP"
      - $ref: "#/parameters/clientUserAgent"
      - $ref: "#/parameters/Authorization"
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/recommendationRequest"
      responses:
        '200':
          description: ''
          examples:
            application/json:
              meta:
                count: <count> //(целое число, обязательный)
                rgid: <rgid> //(строка, обязательный)
              recs:
                - type: recommendation //(строка, обязательный)
                  url: <url> //(строка, обязательный)
                  title: <title> //(строка, обязательный)
                  description: <text> //(текст, обязательный)
                  imageUrl: <imageUrl>  //(строка, необязательный)
                  rid: <rid> //(строка, обязательный)
                  meta:  //(объект, необязательный)
                - type: advertisment //(строка, обязательный)
                  url: <url> //(строка, обязательный)
                  urlId: <urlId> //(строка, обязательный)
                  title: <title> //(строка, обязательный)
                  description: <text> //(текст, обязательный)
                  imageUrl: <imageUrl>  //(строка, необязательный)
                  rid: <rid> //(строка, обязательный)
                  meta:  //(объект, необязательный)
          schema:
            $ref: "#/definitions/recGroup"
        '500':
          description: "Internal server error"
        '401':
          description: "Authorization failed"
        '400':
          description: "Bad Request"

parameters:

  uniqueID:
    name: X-Relap-Unique
    in: header
    required: true
    type: string
    minLength: 1

  clientIP:
    name: X-Real-IP
    in: header
    required: true
    type: string
    format: ipv4

  clientUserAgent:
    name: X-Relap-UserAgent
    in: header
    required: true
    type: string

  Authorization:
    name: Authorization
    in: header
    required: true
    type: string
    minLength: 1
    pattern: "[A-Z][a-z-]+ [A-Za-z0-9]+"

definitions:

  event:
    type: object
    properties:
      type:
        type: string
        enum:
        - hit
        - view
        - click
        - like
        - dislike
        - share
        - comment
      ts:
        type: string
        pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]{3})?"
      url:
        type: string
        format: uri
      meta:
        type: object
      rid:
        type: string
      rgid:
        type: string
    required:
    - type
    - url

  view:
    type: object
    allOf:
    - $ref: "#/definitions/event"
    - properties:
        type:
          enum:
          - view
      required:
      - rgid

  click:
    type: object
    allOf:
    - $ref: "#/definitions/event"
    - properties:
        type:
          enum:
          - click
      required:
      - rid

  eventsRequest:
    type: array
    items:
      allOf:
      - $ref: "#/definitions/event"
      - properties:
          clientIP:
            type: string
            format: ipv4
          uniqueID:
            type: string
            minLength: 1
          userAgent:
            type: string
        required:
        - uniqueID
        - clientIP
        - ts
    maxItems: 1000
    minItems: 1

  recommendationRequest:
    type: object
    required:
    - url
    - limit
    properties:
      url:
        type: string
        format: uri
      seed:
        type: string
      limit:
        type: integer
      algorithms:
        type: array
        items:
          $ref: "#/definitions/algorithm"
      illustrationType:
        enum:
        - original
        - standard
        - wide
        - ultraWide
        - square
        - vertical
      history:
        type: array
        items:
          type: string
          format: uri
          maxItems: 20
      advBlocksCount:
        type: integer
      onlyAdsNeeded:
        type: boolean

  recItem:
    type: object
    required:
    - url
    - title
    - meta
    properties:
      url:
        type: string
        format: uri
      type:
        enum:
        - recommendation
        - promo
        - advertisement
        - exchange
      title:
        type: string
      thumbUrl:
        type: string
        format: uri
      description:
        type: string
      meta:
        type: object
        required:
        - rid
        properties:
          rid:
            type: string

  recGroup:
    type: object
    properties:
      recs:
        type: array
        items:
          $ref: "#/definitions/recItem"
      meta:
        type: object

  algorithm:
    type: object
    required:
    - id
    properties:
      id:
        type: integer
      limit:
        type: integer
